[0m[1m[33mwarning[0m[0m[1m: unused import: `Instant`[0m
[0m [0m[0m[1m[38;5;12m--> [0m[0mdetect_subscriber/src/main.rs:6:27[0m
[0m  [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m6[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse std::time::{Duration, Instant};[0m
[0m  [0m[0m[1m[38;5;12m| [0m[0m                          [0m[0m[1m[33m^^^^^^^[0m
[0m  [0m[0m[1m[38;5;12m|[0m
[0m  [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `random_x`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mdetect_subscriber/src/main.rs:44:13[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m44[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let random_x: f32 = rng.gen_range(100.0..=700.0);[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m            [0m[0m[1m[33m^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_random_x`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `random_y`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mdetect_subscriber/src/main.rs:45:13[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m45[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let random_y: f32 = rng.gen_range(100.0..=500.0);[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m            [0m[0m[1m[33m^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_random_y`[0m

[0m[1m[38;5;9merror[E0382][0m[0m[1m: use of moved value: `shared_detected_objects_clone`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mdetect_subscriber/src/main.rs:105:35[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let shared_detected_objects_clone = Arc::clone(&shared_detected_objects);[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m            [0m[0m[1m[38;5;12m-----------------------------[0m[0m [0m[0m[1m[38;5;12mmove occurs because `shared_detected_objects_clone` has type `Arc<std::sync::Mutex<Vec<DetObj>>>`, which does not implement the `Copy` trait[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m105[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    thread::spawn(move || handle_client(stream,shared_detected_objects_clone.clone()));[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                  [0m[0m[1m[38;5;9m^^^^^^^[0m[0m                      [0m[0m[1m[38;5;12m-----------------------------[0m[0m [0m[0m[1m[38;5;12muse occurs due to use in closure[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                  [0m[0m[1m[38;5;9m|[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                  [0m[0m[1m[38;5;9mvalue moved into closure here, in previous iteration of loop[0m

[0m[1m[38;5;9merror[E0382][0m[0m[1m: borrow of moved value: `shared_detected_objects`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mdetect_subscriber/src/main.rs:117:52[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m90[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let shared_detected_objects = Arc::new(Mutex::new(Vec::new()));[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m        [0m[0m[1m[38;5;12m-----------------------[0m[0m [0m[0m[1m[38;5;12mmove occurs because `shared_detected_objects` has type `Arc<std::sync::Mutex<Vec<DetObj>>>`, which does not implement the `Copy` trait[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m98[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    thread::spawn(move || {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                  [0m[0m[1m[38;5;12m-------[0m[0m [0m[0m[1m[38;5;12mvalue moved into closure here[0m
[0m[1m[38;5;12m99[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        // accept connections and process them serially[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let shared_detected_objects_clone = Arc::clone(&shared_detected_objects);[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                        [0m[0m[1m[38;5;12m-----------------------[0m[0m [0m[0m[1m[38;5;12mvariable moved due to use in closure[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m117[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let shared_detected_objects_clone = Arc::clone(&shared_detected_objects);[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mvalue borrowed here after move[0m

[0m[1mFor more information about this error, try `rustc --explain E0382`.[0m
[0m[0m[1m[31merror[0m[1m:[0m could not compile `detect_subscriber` (bin "detect_subscriber") due to 2 previous errors; 3 warnings emitted
[0m[0m[1m[31merror[0m[1m:[0m failed to compile `detect_subscriber v0.1.0 (/home/rgabbai/projects/Rust/obj_det_view_node/detect_subscriber)`, intermediate artifacts can be found at `/home/rgabbai/projects/Rust/obj_det_view_node/build/detect_subscriber/target`.
To reuse those artifacts with a future compilation, set the environment variable `CARGO_TARGET_DIR` to that path.
make[2]: *** [CMakeFiles/detect_subscriber.dir/build.make:70: CMakeFiles/detect_subscriber] Error 101
make[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/detect_subscriber.dir/all] Error 2
make: *** [Makefile:146: all] Error 2
